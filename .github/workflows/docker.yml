# Summary:
#
# job docker-g-version-flavor-matrix:
# * "g80-latest-alpine"
#
# job docker-main-latest:
# * for push to main branch, update "latest" tag
#
# job docker-sha-release-latest:
# * for release, update "latest" tag
# * git ref tag, eg. "sha-ad132f5"
# * release tag major.minor.path, e.g. "1.2.3" (alpine g80)
# * release tag major.minor, e.g. "1.2" (alpine g78)

name: Docker

on:
  push:
    branches: [main]
    tags: ['*.*.*']
    paths-ignore: ['docs/**']
  release:
    types: [published]

env:
    # Additionally mentioned in docker-sha-release-latest
    # as use of variable fails there
    DOCKERHUB_REPOSITORY: mundialis/actinia-core

jobs:

  # only run for push to branches, do not run for releases
  # take care of different flavors (g78-latest-alpine, g78-latest-ubuntu, ...)
  docker-g-version-flavor-matrix:
    name: build and push ${{ matrix.grass_version }}-latest-${{ matrix.flavor }}
    if: startsWith(github.ref, 'refs/tags/') != true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        grass_version:
          - g80
        flavor:
          - alpine
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: meta
        name: Create tag name
        run: |
          tag="${DOCKERHUB_REPOSITORY}:${{ matrix.grass_version }}-latest-${{ matrix.flavor }}"
          echo "::set-output name=tags::$tag"
      - name: log
        run: |
          echo ${{ steps.meta.outputs.tags }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN  }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          pull: true
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          file: docker/actinia-core-${{ matrix.flavor }}/Dockerfile
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  # only run for push to main branch
  # take care of latest tag
  docker-main-latest:
    name: build and push latest for main branch
    if: startsWith(github.ref, 'refs/heads/main')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - id: meta
        name: Create tag name
        run: |
          tag=${DOCKERHUB_REPOSITORY}:latest
          echo "::set-output name=tags::$tag"
      - name: log
        run: echo ${{ steps.meta.outputs.tags }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN  }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          pull: true
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          file: docker/actinia-core-alpine/Dockerfile
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  # run always
  # On push to branch, take care of sha-ref tag
  # On release, take care of latest and release tags
  docker-sha-release-latest:
    name: build and push release or latest
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create image and tag names
        id: meta
        uses: docker/metadata-action@v3
        with:
          # images: ${DOCKERHUB_REPOSITORY}
          images: mundialis/actinia-core
          tags: |
            type=ref,event=tag
            type=semver,pattern={{major}}.{{minor}}
            type=sha
          flavor: |
            latest=auto
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN  }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          pull: true
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          file: docker/actinia-core-alpine/Dockerfile
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
